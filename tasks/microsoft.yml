---

- name: Ensure dependencies are present
  ansible.builtin.package:
    name: gpg
    state: present

- name: Debian
  when: ansible_os_family == 'Debian'
  block:
    - name: Debian | adding Microsoft packages signing key
      ansible.builtin.apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
      # https://github.com/ansible/ansible/issues/31691
      environment: "{{ sysmon_env_proxy | default(omit) }}"
      when:
        - ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int <= 18

    - name: Setup Microsoft APT key
      ansible.builtin.get_url:
        url: https://packages.microsoft.com/keys/microsoft.asc
        dest: /etc/apt/trusted.gpg.d/microsoft.asc
        mode: '0644'
      register: dl_result
      until: dl_result is success
      when:
        - proxy_url is not defined or not proxy_url | string
        - ((ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int > 18) or
           (ansible_distribution == "Debian" and ansible_distribution_major_version | int > 10)
          )

    - name: Proxy
      when:
        - proxy_url is defined and proxy_url | string
        - ((ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int > 18) or
           (ansible_distribution == "Debian" and ansible_distribution_major_version | int > 10)
          )
      block:
        # workaround for apt_key not supporting proxy (ansible#31691)
        - name: Download Microsoft Apt signing key  # noqa command-instead-of-module
          ansible.builtin.command:
            cmd: curl -sL -o /etc/apt/trusted.gpg.d/microsoft.asc https://packages.microsoft.com/keys/microsoft.asc
          args:
            creates: /etc/apt/trusted.gpg.d/microsoft.asc
          environment:
            http_proxy: "{{ proxy_url | default(omit) }}"

    - name: Debian | adding Microsoft prod packages repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] http://packages.microsoft.com/{{ ansible_distribution | lower }}/{{ ansible_distribution_major_version }}/prod {{ ansible_distribution_release | lower }} main"
        filename: microsoft.list
        state: present
      notify:
        - Refresh apt cache
      when: ansible_distribution == 'Debian'

    - name: Ubuntu | adding Microsoft prod packages repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] http://packages.microsoft.com/{{ ansible_distribution | lower }}/{{ ansible_distribution_version }}/prod {{ ansible_distribution_release | lower }} main"
        filename: microsoft.list
        state: present
      notify:
        - Refresh apt cache
      when: ansible_distribution == 'Ubuntu'

    - name: Debian | adding apt preferences for Microsoft prod packages
      ansible.builtin.copy:
        content: |
          Package: *
          Pin: origin "packages.microsoft.com"
          Pin-Priority: 1001
        dest: /etc/apt/preferences.d/99microsoft-dotnet.pref
        mode: 0644
      when: sysmon_build

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

- name: RedHat | adding Microsoft packages signing key
  ansible.builtin.rpm_key:
    key: https://packages.microsoft.com/keys/microsoft.asc
    state: present
  when: ansible_os_family == 'RedHat'
  register: dl_result
  until: dl_result is success

- name: RedHat | adding Microsoft prod packages repository
  ansible.builtin.package:
    name: "https://packages.microsoft.com/config/rhel/{{ ansible_distribution_major_version }}/packages-microsoft-prod.rpm"
    state: present
  when: ansible_os_family == 'RedHat'

- name: Ensure Microsoft packages are present
  ansible.builtin.package:
    name: dotnet-runtime-6.0
    state: present
